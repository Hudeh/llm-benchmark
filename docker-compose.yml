
services:

  db:
    restart: "on-failure"
    image: postgres:15.1-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    env_file:
      - ./.env

  redis:
    restart: "on-failure"
    image: redis:7.2-rc3-alpine
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  api: &api
    build:
      context: .
      dockerfile: docker/api/Dockerfile
    image: llm_benchmark-api
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./app:/app
    ports:
      - '8000:8000'
    env_file:
      - ./.env
    restart: unless-stopped
    depends_on:
      - db
      - redis
    
  celery:
    <<: *api
    command: celery --app=tasks.celery_tasks worker -l info --logfile=logs/celery_worker.log -E
    ports: []
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - api 
      - redis

  celery-beat:
    <<: *api
    command: celery --app=tasks.celery_tasks beat -l info --logfile=logs/celery_beat.log
    ports: []
    volumes:
      - ./app:/app
    env_file:
      - ./.env
    depends_on:
      - api
      - celery
      - redis

  flower-dashboard:
    <<: *api
    command: celery --broker=redis://redis:6379 flower --port=5555
    ports:
       - 5555:5555
    env_file:
      - ./.env
    depends_on:
      - api
      - celery
      - redis

  llm-frontend:
    build:
      context: .
      dockerfile: docker/frontend/Dockerfile
    image: llm_benchmark-app
    ports:
      - "3000:3000"
    volumes:  
      - .:/app:delegated 
      - /app/node_modules  
    env_file:
      - ./.env
    command: sh -c "npm start"
    restart: always
    networks:
      - webnet

volumes:
  postgres_data:
  redisdata:
   
networks:
  webnet:
    driver: bridge